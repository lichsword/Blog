-------------
日期：
天气：
星期：
-------------
正文
-------------
数据库这一块就使用sqlite，然后流程为本地sqlite的内容编辑，然后覆盖到服务器上。
服务端编程，要考虑并发，至少要考虑并发的crash，以及bug。
以上2点就足够作内容的产品了。

工具类，最好是做文本工具类，不要做图像工具类。因为文本工具类，比较简单。
图像工具类，我还没经验，这不是简单的OpenGL就可以完成的。要设计模型呀等等。

人工智能类，我遇到了一个问题，就是Linux的工具设计思想，是主张：一个工具做一件事，而且工具不做聊天的提示，重点是命令。简单的说，就是不要让用户一直进行选择，回应的操作，而是用户一个命令下去，一路执行到底，得到结果（可能正确，可能错误）。

所以人工智能类，看起来是有几个部分的小工具，首先，我要一个语义解释器，它能接收我输入的自然语言内容，然后它输出语义给另一个工具，可能是一个GUI显示工具（当然也可以是基于文本的显示工具），然后我们就进行下一次的输入。一轮一轮的对话。如果是有结果的对话，则会把关键字对的工具调用，执行真正的操作，举个例子：
我：我需要查看星际争霸的数据库，要查看有几个表？
答：无数据库，无表，过程：
/database/* 无对应数据库
或
答：有4个表，如下所示：
1.skill
2.strategy
3.video
4.comments

我：查看 skill表
答：信息如下：
-------------------------------------------
字段名    id    name    skill    comments
值        1     aaa     sdwq      coascm
值        2     12d     1v34g     121f1
-------------------------------------------
字段定义如下：
-------------------------------------------
index  name      type     default       
1      id        int      auto inc
2      name      text     null
3      skill     text     null
4      comments  text     null
-------------------------------------------
我：我要添加skill信息
答：请输入信息数据，引导如下：
id(当前) ---> name ---> skill ---> comments
input: N/A (auto inc)
name: newname
skill: AOE
comments: kill a lots enemy in limit area. 
我: 提交
答：提交完毕，最新数据如下：
-------------------------------------------
字段名    id    name    skill    comments
值        1     aaa     sdwq      coascm
值        2     12d     1v34g     121f1
值        3     newname AOE      kill a lots enemy in limit area.
-------------------------------------------

另外，我发现一个需求很强烈，就是测试数据的准备，多样性和完备性，可以让开发的代码更完整，容错性，体验性能，都较好。说具体点，举个例子：长期准备的一批图片数据，供测试，有长方形的，正方形的，jpeg，png，大的小的等等，这样测试时，全用上，可以做界面的数据压力测试 和 界面的美观兼容性测试。而不是到了要写图片显示类时，再去找图片。那时，可能会因为时间不够，导致测试图片的样本不全，后果可想而知。
